import json
import locale
import sqlite3
from datetime import date, datetime
import telebot
import time

# api_token = '5956191624:AAHw268WZP_apCbj9aDUc6wAFE9uyEd4B0o' # test bot @test239botbot
api_token = '6173204610:AAEVmFTmk-b3-UdjlUqHFyyFvVbI6va6Ymg'  # production bot @mirexratebot
bot = telebot.TeleBot(api_token)


def getmirkurs():
    conn = sqlite3.connect('ratesdb')
    c = conn.cursor()
    c.execute('SELECT * FROM exrates WHERE id=(select max(id) from exrates) ORDER BY id DESC LIMIT 1')
    records = c.fetchall()
    columns = [col[0] for col in c.description]
    rows = [dict(zip(columns, row)) for row in c.fetchall()]
    for row in records:
        ratedate = row[1]
        rate = row[3]
    c.close()
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –∫—É—Ä—Å–∞ –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π –≤–∏–¥
    locale.setlocale(locale.LC_TIME, 'ru_RU.UTF-8')
    ratedate = datetime.strptime(ratedate, '%Y-%m-%d')
    ratedate = datetime.strftime(ratedate, '%d %B %Y')
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π –≤–∏–¥
    curdate = str(date.today())
    curdate = datetime.strptime(curdate, '%Y-%m-%d')
    curdate = datetime.strftime(curdate, '%d %B %Y')
    result = '''–°–µ–≥–æ–¥–Ω—è {}
–ö—É—Ä—Å –æ—Ç {} - {} —Ç–µ–Ω–≥–µ –∑–∞ 1 —Ä—É–±'''.format(curdate, ratedate, rate)
    result2 = '''–°–µ–≥–æ–¥–Ω—è {}'''.format(curdate)
    return result, result2


# –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —á–∞—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º
with open("whitelist.txt", "r") as fwl:
    whiteliststr = str(fwl.read())
    whitelist = json.loads(whiteliststr)


@bot.message_handler(commands=['start'])
def hellouser(message):
    bot.send_message(message.chat.id, text='''–ü—Ä–∏–≤–µ—Ç!
–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞:

‚úÖ –ü–æ –∑–∞–ø—Ä–æ—Å—É –≤—ã–¥–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –ú–ò–†.
‚úÖ –ï—Å–ª–∏ –∫—É—Ä—Å –∏–∑–º–µ–Ω–∏–ª—Å—è, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º –∫—É—Ä—Å–æ–º.
‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤ –±–æ–ª—å—à—É—é –∏–ª–∏ –º–µ–Ω—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É –∏–∑–º–µ–Ω–∏–ª—Å—è –∫—É—Ä—Å.
‚úÖ –ú–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ –≤ –õ–°, —Ç–∞–∫ –∏ –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö/–ø—É–±–ª–∏—á–Ω—ã—Ö –≥—Ä—É–ø–ø–∞—Ö.

–î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –ø–ª–∞—Ç–Ω—ã–π: 100 —Ç–≥/–º–µ—Å –∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, 2000 —Ç–≥/–º–µ—Å –¥–ª—è –≥—Ä—É–ø–ø—ã.
–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º, –Ω–∞–∂–º–∏—Ç–µ /kursmir''')


@bot.message_handler(commands=['kursmir'])
def mirexrate(message):
    user = message.chat.id
    result = getmirkurs()
    a, b = result
    if user in whitelist:
        bot.send_message(message.chat.id, text=a)
    else:
        print(whitelist)
        bot.send_message(message.chat.id, text='''–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É, 
–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, 
–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ –í–∞—à ID {} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç—É: @pycarrot2.'''.format(user))


conn = sqlite3.connect('ratesdb')
c = conn.cursor()
c.execute('SELECT * FROM exrates WHERE id=(select max(id) from exrates) ORDER BY id DESC LIMIT 1')
records = c.fetchall()
columns = [col[0] for col in c.description]
rows = [dict(zip(columns, row)) for row in c.fetchall()]
for row in records:
    ratedate = row[1]
    rate = row[3]
c.execute("SELECT COUNT(*) FROM exrates")
current_record_count = c.fetchone()[0]
print(current_record_count)
c.close()

with open("linecount.txt", "r") as f:
    previous_record_count = int(f.read())
with open("exrate.txt", "r") as frate:  # test
    previous_rate = float(frate.read())  # test
if current_record_count > previous_record_count:
    print("New database entry added")
    c, d = getmirkurs()
    print('D:', d)
    for chat in whitelist:
        if rate > previous_rate:  # test
            bot.send_message(chat_id=chat, text='''–ù–æ–≤—ã–π –æ–±–º–µ–Ω–Ω—ã–π –∫—É—Ä—Å –ú–ò–†!
{}
üî∫{} —Ç–µ–Ω–≥–µ –∑–∞ 1 —Ä—É–±'''.format(d, rate))  # test
        else:  # test
            bot.send_message(chat_id=chat, text='''–ù–æ–≤—ã–π –æ–±–º–µ–Ω–Ω—ã–π –∫—É—Ä—Å –ú–ò–†!
{}
üîª{} —Ç–µ–Ω–≥–µ –∑–∞ 1 —Ä—É–±'''.format(d, rate))  # test
    with open("linecount.txt", "w") as f:
        f.write(str(current_record_count))
    with open("exrate.txt", "w") as frate:  # test
        frate.write(str(rate))  # test

bot.polling(none_stop=True)
