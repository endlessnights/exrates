import json
import locale
import sqlite3
from datetime import date, datetime
import telebot
from telebot import types
import time

api_token = '5956191624:AAHw268WZP_apCbj9aDUc6wAFE9uyEd4B0o'  # test bot @test239botbot
# api_token = '6173204610:AAEVmFTmk-b3-UdjlUqHFyyFvVbI6va6Ymg'  # production bot @mirexratebot
bot = telebot.TeleBot(api_token)
users = []

# Connect to the database
conn = sqlite3.connect('botusers.db')
c = conn.cursor()
# Create a table to store user information
c.execute('''
            CREATE TABLE IF NOT EXISTS botusers
            ([chat_id] INTEGER PRIMARY KEY, [username] TEXT)
            ''')
conn.commit()
conn.close()


def getmirkurs():
    conn = sqlite3.connect('ratesdb')
    c = conn.cursor()
    c.execute('SELECT * FROM exrates WHERE id=(select max(id) from exrates) ORDER BY id DESC LIMIT 1')
    records = c.fetchall()
    columns = [col[0] for col in c.description]
    rows = [dict(zip(columns, row)) for row in c.fetchall()]
    for row in records:
        ratedate = row[1]
        rate = row[3]
    c.close()
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –∫—É—Ä—Å–∞ –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π –≤–∏–¥
    locale.setlocale(locale.LC_TIME, 'ru_RU.UTF-8')
    ratedate = datetime.strptime(ratedate, '%Y-%m-%d')
    ratedate = datetime.strftime(ratedate, '%d %B %Y')
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π –≤–∏–¥
    curdate = str(date.today())
    curdate = datetime.strptime(curdate, '%Y-%m-%d')
    curdate = datetime.strftime(curdate, '%d %B %Y')
    result = '''–°–µ–≥–æ–¥–Ω—è {}
1 RUB = {} –¢–µ–Ω–≥–µ (–ö—É—Ä—Å –æ—Ç {})'''.format(curdate, rate, ratedate)
    result2 = '''–°–µ–≥–æ–¥–Ω—è {}'''.format(curdate)
    return result, result2


# –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —á–∞—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º
with open("whitelist.txt", "r") as fwl:
    whiteliststr = str(fwl.read())
    whitelist = json.loads(whiteliststr)


def getusersfromdb():
    conn = sqlite3.connect('botusers.db')
    c = conn.cursor()
    c.execute('SELECT chat_id FROM botusers')
    chat_ids = [chat_id[0] for chat_id in c.fetchall()]
    conn.close()

    return chat_ids


starttext = '''–ü—Ä–∏–≤–µ—Ç!
–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞:
    
‚úÖ –ü–æ –∑–∞–ø—Ä–æ—Å—É –≤—ã–¥–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –ú–ò–†.
‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫—É—Ä—Å–∞.
‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤ –±–æ–ª—å—à—É—é –∏–ª–∏ –º–µ–Ω—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É –∏–∑–º–µ–Ω–∏–ª—Å—è –∫—É—Ä—Å.
‚úÖ –ú–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ –≤ –õ–°, —Ç–∞–∫ –∏ –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö/–ø—É–±–ª–∏—á–Ω—ã—Ö –≥—Ä—É–ø–ø–∞—Ö.

–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º, –Ω–∞–∂–º–∏—Ç–µ /kursmir'''


@bot.message_handler(commands=['start'])
def hellouser(message):
    currentuser = message.chat.id
    userinfo = message.from_user
    # user_info = (message.chat.id, message.chat.username, currentuser.first_name, currentuser.last_name)
    if not str(currentuser).startswith('-'):
        conn = sqlite3.connect('botusers.db')
        c = conn.cursor()
        c.execute(
            'INSERT OR IGNORE INTO "botusers" ("chat_id", "username") VALUES("{}", "{}");'.format(userinfo.id,
                                                                                                  userinfo.username))
        conn.commit()
        conn.close()
    chat_ids = getusersfromdb()
    currentuser = message.chat.id
    markup = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text='üí∞ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞ –∏ –ø—Ä–æ–µ–∫—Ç', callback_data='send_message')
    markup.add(button)
    if str(currentuser).startswith('-'):
        bot.send_message(chat_id=message.chat.id, text=starttext)
    else:
        bot.send_message(message.chat.id, text=starttext, reply_markup=markup)


supporttext = '''
–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç –ë–∞—Ö—Ç–∏ –ë. @pycarrot2 –∏ 
–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –º–µ–Ω—è –∏ –º–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã, –æ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –≤–æ–∑–º–æ–∂–Ω–æ —Å–ª—ã—à–∞–ª–∏:
‚ùáÔ∏è –î–∞–Ω–Ω—ã–π –±–æ—Ç –æ–±–º–µ–Ω–Ω–æ–≥–æ –∫—É—Ä—Å–∞ –ú–ò–† —Ç–µ–Ω–≥–µ-—Ä—É–±
‚ùáÔ∏è –°–∞–π—Ç exrates.geekcv.io
‚ùáÔ∏è –°–∞–π—Ç-–ø–æ—Ä—Ç–∞–ª MeetKZ.com
‚ùáÔ∏è –°–∞–π—Ç—ã, —Ä–∞–Ω–µ–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤ –ø–µ—Ä–∏–æ–¥ –º–æ–±–∏–ª–∏–∑–∞—Ü–∏–∏:
1. kpp.geekcv.io
2. bnb.geekcv.io
‚ùáÔ∏è –ë–æ—Ç –≤—ã–¥–∞—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ VPN @Vas3kVPNbot

–†–µ–∫–≤–∏–∑–∏—Ç—ã:
+7 705 568 50 30 Kaspi (Bakhti B.)

Ô∏è'''


@bot.callback_query_handler(func=lambda c: c.data == 'send_message')
def callback_handler(callback_query):
    bot.answer_callback_query(callback_query.id)
    bot.send_message(chat_id=callback_query.message.chat.id, text=supporttext)


@bot.message_handler(commands=['kursmir'])
def mirexrate(message):
    user = message.chat.id  # –¢–µ–∫—É—â–∏–π ID —á–∞—Ç–∞/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    result = getmirkurs()
    a, b = result
    if str(user).startswith('-'):  # –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —á–∞—Ç/–≥—Ä—É–ø–ø–∞
        if user in whitelist:  # –∏ -ID —á–∞—Ç–∞/–≥—Ä—É–ø–ø—ã –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ
            bot.send_message(message.chat.id, text=a)
        else:
            bot.send_message(message.chat.id, text='''–£ –¥–∞–Ω–Ω–æ–≥–æ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É,
–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞,
–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ –í–∞—à ID {} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç—É: @pycarrot2.
–î–æ—Å—Ç—É–ø –¥–ª—è —á–∞—Ç–æ–≤ –ø–ª–∞—Ç–Ω—ã–π - 2000 —Ç–≥/–º–µ—Å'''.format(user))
    else:
        bot.send_message(message.chat.id, text=a)  # –µ—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —á–µ–ª–æ–≤–µ–∫, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        userinfo = message.from_user
        conn = sqlite3.connect('botusers.db')
        c = conn.cursor()
        c.execute(
            'INSERT OR IGNORE INTO "botusers" ("chat_id", "username") VALUES("{}", "{}");'.format(userinfo.id,
                                                                                                  userinfo.username))
        conn.commit()
        conn.close()
    return user


conn = sqlite3.connect('ratesdb')
c = conn.cursor()
c.execute('SELECT * FROM exrates WHERE id=(select max(id) from exrates) ORDER BY id DESC LIMIT 1')
records = c.fetchall()
columns = [col[0] for col in c.description]
rows = [dict(zip(columns, row)) for row in c.fetchall()]
for row in records:
    ratedate = row[1]
    rate = row[3]
c.execute("SELECT COUNT(*) FROM exrates")
current_record_count = c.fetchone()[0]
print(current_record_count)
c.close()


def send_message_to_chats(text, chats, chat_ids):
    for chat in chats:
        bot.send_message(chat_id=chat, text=text)
    for chat_id in chat_ids:
        bot.send_message(chat_id=chat_id, text=text)


def write_to_file(filename, data):
    with open(filename, "w") as f:
        f.write(str(data))


def read_from_file(filename):
    with open(filename, "r") as f:
        return float(f.read())


def main():
    previous_record_count = read_from_file("linecount.txt")
    previous_rate = read_from_file("exrate.txt")
    if current_record_count > previous_record_count:
        print("New database entry added")
        c, d = getmirkurs()
        chat_ids = getusersfromdb()
        rate_prefix = "üî∫" if rate > previous_rate else "üîª"
        message = f"–ù–æ–≤—ã–π –æ–±–º–µ–Ω–Ω—ã–π –∫—É—Ä—Å –ú–ò–†!\n{d}\n{rate_prefix}{rate} —Ç–µ–Ω–≥–µ –∑–∞ 1 —Ä—É–±"
        send_message_to_chats(message, whitelist, chat_ids)
        write_to_file("linecount.txt", current_record_count)
        write_to_file("exrate.txt", rate)


if __name__ == "__main__":
    main()

bot.polling(none_stop=True)
